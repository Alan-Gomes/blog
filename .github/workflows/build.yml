name: Build

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  release:
    runs-on: ubuntu-latest
    needs: build
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      ID_PROD_DEPLOY: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: 'Deployed from GitHub action'
          NETLIFY_DEPLOY_TO_PROD: ${{ env.ID_PROD_DEPLOY }}
          build_directory: dist
          install_command: 'echo Skipping installing the dependencies'
          build_command: 'echo Skipping building the web files'
          deploy_alias: ${{ env.BRANCH_NAME }}
      - name: Purge Cloudflare cache
        if: ${{ env.ID_PROD_DEPLOY }}
        uses: nathanvaughn/actions-cloudflare-purge@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CF_CACHE_PURGE_ZONE }}
          CLOUDFLARE_AUTH_KEY: ${{ secrets.CF_CACHE_PURGE_TOKEN }}
